name: Build Binaries

on:
  push:
    branches:    
    - '**'              # every branch
    - '!no-build-**'    # unless marked as no-build

env:
  GEODE_SUITE: ${{ github.workspace }}/suite

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
        - name: "Windows"
          bin_folder: "windows"
          cli_name: "geode.exe"
          os: windows-2019
          extra_flags: '-G "Visual Studio 16 2019" -T host=x86 -A win32'
          out_paths:  './build/Release/GeodeAPI.geode ./build/Release/GeodeAPI.lib'
        - name: "macOS"
          bin_folder: "macos"
          cli_name: "geode"
          os: macos-latest
          extra_flags: ""
          out_paths:  './build/GeodeAPI.geode ./build/GeodeAPI.dylib'
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive

    - uses: actions/checkout@v2
      with:
        submodules: recursive
        repository: geode-sdk/suite
        ref: nightly
        path: ${{ github.workspace }}/suite

    - name: Setup CLI
      shell: bash
      run: |
        echo ./suite/${{ matrix.config.bin_folder }} >> $GITHUB_PATH
        echo {\"install_path\":\"${{ github.workspace }}/build\"} >> ./suite/${{ matrix.config.bin_folder }}/config.json
        chmod +x ./suite/${{ matrix.config.bin_folder }}/${{ matrix.config.cli_name }}

    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x86
      if: matrix.config.os == 'windows-latest'

    - name: Configure CMake
      run: |
        cmake -B ${{ github.workspace }}/build ${{ matrix.config.extra_flags }}
    
    - name: Build
      run: |
        cd ${{ github.workspace }}/build
        cmake --build . --config Release
    
    - name: Move to output folder
      shell: bash
      working-directory: ${{ github.workspace }}
      run: |
        mkdir ./out
        mv ${{ matrix.config.out_paths }} ./out

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.config.name }} API Binary + Package
        path: ./out/
